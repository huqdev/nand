class MazeMenu {
    static String statusS, admin, enabled, disabled, felder, confirm;
    field boolean adminMode;
    field Status status;
    constructor MazeMenu new() {
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void setAdminMode(boolean mode) {
        let adminMode = mode;
        return;
    }

    method void setStatus(Status newStatus) {
        let status = newStatus;
        return;       
    }

    method void update() {
        // clear Menu area
        do Screen.setColor(false);
        do Screen.drawRectangle(0,0,127,255);

        // Ãœberschrift des Menu
        let statusS = "Status";
        do Output.moveCursor(0,0);
        do Output.printString(statusS);
        do statusS.dispose();
        
        // Admin Modus
        let admin = "Admin:";
        do Output.moveCursor(1,0);
        do Output.printString(admin);
        do admin.dispose();
        // admin state
        do Output.moveCursor(1,6);
        if(adminMode) {
            let enabled = "enabled";
            do Output.printString(enabled);
            do enabled.dispose();
        } else {
            let disabled = "disabled";
            do Output.printString(disabled);
            do disabled.dispose();
        }
        
        // felder bzw. Tiles stats
        do Output.moveCursor(2,0);
        let felder = "entdeckt/gesamt";
        do Output.printString(felder);
        do Output.moveCursor(3,0);
        do Output.printInt(status.getFreeTiles());
        // 47 = '/'
        do Output.printChar(47);
        do Output.printInt(status.getTotalTiles());
        do felder.dispose();
        
        return;
    }

    method void enablePopup(int id) {
        let confirm = "press y to confirm admin mode";
        do Screen.setColor(false);
        do Screen.drawRectangle(128, 64, 256 + 128, 128);
        do Screen.setColor(true);
        do Screen.drawRectangle(130, 66, 256 + 126, 126);
        do Screen.setColor(false);
        do Screen.drawRectangle(132, 68, 256 + 124, 124);
        do Output.moveCursor(7,17);
        do Output.printString(confirm);
        do confirm.dispose();
        return;
    }
}
